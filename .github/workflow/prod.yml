name: Build & Push to Docker Hub

on:
  push:
    branches: [ main, qa, test ]
  workflow_dispatch:

env:
  # Pull image repo from the DOCKERHUB environment secret
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPO }}
  BUILD_CONTEXT: .
  DOCKERFILE: Dockerfile

jobs:
  build-and-push:
    name: Build & Push (${{ github.ref_name }})
    runs-on: ubuntu-latest
    environment: DOCKERHUB

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_UN }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Derive tags
        id: tags
        run: |
          # Sanitize branch to a valid Docker tag: lowercase and replace disallowed chars with '-'
          RAW_BRANCH="${GITHUB_REF_NAME}"
          BRANCH_TAG=$(echo "$RAW_BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's#[^a-z0-9_.-]#-#g')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "branch=${BRANCH_TAG}" >> $GITHUB_OUTPUT
          echo "sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=raw,value=${{ steps.tags.outputs.branch }}
            type=raw,value=sha-${{ steps.tags.outputs.sha }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary
        run: |
          echo "Pushed: ${{ env.DOCKERHUB_REPO }}"
          echo "Tags:"
          echo "${{ steps.meta.outputs.tags }}"
